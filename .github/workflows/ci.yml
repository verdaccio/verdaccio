name: CI

on:
  push:
  pull_request:
    paths:
      - .changeset/**
      - .github/workflows/ci.yml
      - 'packages/**'
      - 'test/**'
      - 'docker-examples/**'
      - 'jest/**'
      - 'package.json'
      - 'pnpm-workspace.yaml'
permissions:
  contents: read
concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  prepare:
    runs-on: ubuntu-latest
    name: setup verdaccio
    services:
      verdaccio:
        image: verdaccio/verdaccio:6
        ports:
          - 4873:4873
        env:
          NODE_ENV: production
          options: >-
            --health-cmd="curl -f http://0.0.0.0:4873/-/ping || exit 1"
            --health-interval=10s   
            --health-timeout=20s    
            --health-retries=6
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Install dependencies with a custom registry
        uses: ./.github/actions/install-app
  lint:
    runs-on: ubuntu-latest
    name: Lint
    needs: prepare
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Install dependencies with a custom registry
        uses: ./.github/actions/install-app
        with:
            reporter: 'default'
      - name: Lint
        run: pnpm lint
  format:
    runs-on: ubuntu-latest
    name: Format
    needs: prepare
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Install dependencies with a custom registry
        uses: ./.github/actions/install-app
        with:
          reporter: 'default'
      - name: Lint
        run: pnpm format:check
  test:
    needs: [prepare]
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest]
        node_version: [18, 20, 21, 22, 23]
    name: ${{ matrix.os }} / Node ${{ matrix.node_version }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Build application with Node ${{ matrix.node_version }}
        uses: ./.github/actions/build-app
        with:
          node-version: ${{ matrix.node_version }}
      - name: Test
        run: pnpm test
  sync-translations:
    needs: [test]
    runs-on: ubuntu-latest
    name: synchronize translations
    if: (github.event_name == 'push' && github.ref == 'refs/heads/master' && github.repository == 'verdaccio/verdaccio') || github.event_name == 'workflow_dispatch'
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/setup-node@1d0ff469b7ec7b3cb9d8673fde0c81c44821de2a # v4.2.0
        with:
          node-version-file: '.nvmrc'
      - name: Install pnpm
        run: |
          npm install --global corepack@latest
          corepack enable
          corepack install
      - uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.2.0
        with:
          path: ~/.pnpm-store
          key: pnpm-${{ hashFiles('pnpm-lock.yaml') }}
      - name: set store
        run: |
          pnpm config set store-dir ~/.pnpm-store
      - name: Install
        ## we need scripts, pupetter downloads aditional content
        run: pnpm install --registry http://localhost:4873
      - name: build
        run: pnpm build
      - name: generate website translations
        run: pnpm --filter ...@verdaccio/website write-translations
      - name: sync
        env:
          CROWDIN_VERDACCIO_API_KEY: ${{ secrets.CROWDIN_VERDACCIO_API_KEY }}
          CONTEXT: production
        run: pnpm crowdin:sync
